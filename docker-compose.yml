version: '3.4'

services:

  lutrisweb:
    build:
      context: .
      dockerfile: dev.Dockerfile
    container_name: lutrisweb
    volumes:
      - type: volume
        source: media
        target: /app/media
        volume:
          nocopy: true
      - type: bind
        source: .
        target: /app
    ports:
      - "8000:8000"
    restart: on-failure
    stdin_open: true
    tty: true
    depends_on:
      - lutrisdb
      - lutriscache
      - lutrisfrontend

  lutrisfrontend:
    build:
      context: .
      dockerfile: frontend.Dockerfile
    container_name: lutrisfrontend
    command: bash -c "mkdir -p ./static && npm install && npm run build:issues-dev"
    volumes:
      - type: bind
        source: ./frontend
        target: /app/frontend
    stdin_open: true
    tty: true
    restart: on-failure

  celery_worker:
    build:
      context: .
    container_name: celery_worker
    volumes:
      - type: volume
        source: media
        target: /app/media
        volume:
          nocopy: true
    depends_on:
      - lutrisdb
      - lutriscache
    command: celery worker -A lutrisweb.celery.app -B -l info

  lutrisdb:
    image: postgres:12
    container_name: lutrisdb
    expose:
      - "5430"
    command: -p 5430
    volumes:
      - postgresql:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: 'lutris'
      POSTGRES_USER: 'lutris'
      POSTGRES_PASSWORD: 'admin'

  lutriscache:
    container_name: lutriscache
    restart: on-failure
    image: redis:6.0.1
    ports:
      - "6379:6379"
    volumes:
      - redisdata:/data


volumes:
  postgresql:
  media:
  redisdata:
